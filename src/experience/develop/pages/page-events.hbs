{{#fillSection "pageName"}} Eventos {{/fillSection}}
{{#fillSection "pageDescription"}} Eventos {{/fillSection}}

<style>

    .bootstrap-table .fixed-table-container .table thead th .th-inner {
        color: #3f4254!important;
        font-weight: 500!important;
    }

    .badge-light-info {
        color: #7F7F7F;
        background-color: #efefef;
    }

</style>

<div class="card card-flush h-xl-100">

    <div class="card-header pt-7">
        <h3 class="card-title align-items-start flex-column">
            <span class="card-label fw-bold text-gray-800">Tabela de eventos</span>
            <span class="text-gray-400 mt-1 fw-semibold fs-6">Visualize a qualquer momento os alarmes gerados em sua aplicação</span>
        </h3>
    </div>

    <div class="card-body pt-2 mt-2">
        <div class="dataTables_wrapper dt-bootstrap4 no-footer">
            <div class="table-responsive">
                <table class="table align-middle table-row-dashed fs-6 gy-3 dataTable no-footer" id="results"></table>
            </div>
        </div>
    </div>

</div>

<script>

    const stateOrder = {
        new: 0,
        acknowledged: 1,
        resolved: 2
    };

    const sortEvents = (a, b) => {
        if (a.level < b.level) {
            return -1;
        } else if (a.level > b.level) {
            return 1;
        }

        const stateA = stateOrder[a.state.toLowerCase()];
        const stateB = stateOrder[b.state.toLowerCase()];

        if (stateA < stateB) {
            return -1;
        } else if (stateA > stateB) {
            return 1;
        }

        return 0;
    };

    var events = JSON.parse('{{jsonEncode pageData}}')["result"];
    events.sort(sortEvents);

    $('#results').bootstrapTable({
        pageNumber: 1,  
        pageSize: 10,
        searchHighlight : 'true',
        pageList: '[10, 20, 50, 100, 250, 500]',
        locale: '{{experience.user.userTags.language}}',
        columns: [{
            field: 'level',
            title: 'Nível',
            align: 'center',
            width: 150,
            formatter: levelFormatter
        }, {
            field: 'subject',
            title: 'Título',
            width: 400
        }, {
            field: 'message',
            title: 'Descrição'
        },{
            field: 'state',
            title: 'Estado',
            align: 'center',
            width: 180,
            formatter: stateFormatter
        }]
    });

    $('#results').bootstrapTable('load', events);


    // Actions Formatter

    function levelFormatter(value, row) {
        let txt = value == 'error' ? 'Alerta' : 'Crítico';
        let level = value == 'error' ? 'badge-light-warning' : 'badge-light-danger';
        return `<span class="badge py-3 px-4 fs-7 ${level}">${txt}</span>`;
    }

    function stateFormatter(value, row) {
        let txt = value == 'resolved' ? 'Resolvido' : value == 'new' ? 'Novo' : 'Reconhecido';
        let level = value == 'resolved' ? 'badge-light-success' : value == 'new' ? 'badge-light-primary' : 'badge-light-info';
        return `<span class="badge py-3 px-4 fs-7 ${level}">${txt}</span>`;
    }

</script>